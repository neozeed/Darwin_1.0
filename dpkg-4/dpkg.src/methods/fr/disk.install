#!/bin/sh

set -e
vardir="$1"
method=$2
option=$3

cd "$vardir/methods/disk"

. ./shvar.$option

xit=1
trap '
	if [ -n "$umount" ]
	then
		umount "$umount" >/dev/null 2>&1
	fi
	exit $xit
' 0

if [ -n "$p_blockdev" ]
then
	umount="$p_mountpoint"
	mount -rt "$p_fstype" -o nosuid,nodev "$p_blockdev" "$p_mountpoint"
fi

if [ -n "$p_nfs" ]
then
	umount="$p_mountpoint"
	mount -rt nfs "$p_nfs" -o nosuid,nodev "$p_mountpoint"
fi

predep="$vardir/predep-package"
while true
do
	set +e
	dpkg --predep-package >"$predep"
	rc=$?
	set -e
	if test $rc = 1; then break; fi
	test $rc = 0

	perl -e '
		($binaryprefix,$predep) = @ARGV;
		$binaryprefix =~ s,/*$,/, if length($binaryprefix);
		open(P,"< $predep") || die "impossible d'ouvrir $predep: $!\n";
		while (<P>) {
			s/\s*\n$//;
			$package= $_ if s/^Package: //i;
			@filename= split(/ /,$_) if s/^Filename: //i;
			@msdosfilename= split(/ /,$_) if s/^MSDOS-Filename: //i;
		}
		length($package) || die "erreur interne - pas de paquet";
		@filename || die "erreur interne - pas de nom de fichier";
		@filename==@msdosfilename || !@filename || !@msdosfilename ||
			die "erreur interne - non-correspondance >@filename< >@msdosfilename<";
		@invoke=(); $|=1;
		for ($i=0; $i<=$#filename; $i++) {
			$ppart= $i+1;
			print "Je recherche la partie $ppart de $package ... ";
			if (-f "$binaryprefix$filename[$i]") {
				$print= $filename[$i];
				$invoke= "$binaryprefix$filename[$i]";
			} elsif (-f "$binaryprefix$msdosfilename[$i]") {
				$print= $msdosfilename[$i];
				$invoke= "$binaryprefix$msdosfilename[$i]";
			} else {
				$base= $filename[$i]; $base =~ s,.*/,,;
				$msdosbase= $msdosfilename[$i]; $msdosbase =~ s,.*/,,;
				defined($c= open(X,"-|")) ||
					die "impossible de \"forker\" pour «find» : $!\n";
				if (!$c) {
					exec("find", length($binaryprefix)
					     ? $binaryprefix : ".","-follow",
					     "-name",$base,"-o","-name",$msdosbase);
					die "impossible d'exécuter «find» : $!\n";
				}
				while (chop($invoke= <X>)) { last if -f $invoke; }
				$print= $invoke;
				if (substr($print,0,length($binaryprefix)+1) eq
				    "$binaryprefix/") {
					$print= substr($print,length($binaryprefix));
				}
			}
			if (!length($invoke)) {
				print STDERR "

Aïe ! Je dois installer ou mettre à jour $package, mais je ne vois
nulle part le(s) fichier(s) nécéssaire(s).  J'attendais la version
$version ou supérieure, comme spécifié dans le fichier 'Packages'.

Peut-être l'avez-vous téléchargé sous un nom inatendu. En tout cas,
vous devez trouver le(s) fichier(s) (listés dans le fichier 'Packages'
ou dans /var/lib/dpkg/available) et relancer l'installation, ou
mettre à jour le paquet en utilisant «dpkg --install --auto-deconfigure»
à la main.

";
				exit(1);
			}
			print "$print\n";
			push(@invoke,$invoke);
		}
		print "Je lance «dpkg -iB» pour $package ...\n";
		exec("dpkg","-iB","--",@invoke);
		die "impossible d'exécuter dpkg : $!\n";
	' -- "$p_mountpoint$p_main_binary" "$predep"
done

for f in main ctb nf lcl
do
	eval 'this_binary=$p_'$f'_binary'
	if [ -z "$this_binary" ]; then continue; fi
	echo Running dpkg -iGROEB "$p_mountpoint$this_binary"
	dpkg -iGROEB "$p_mountpoint$this_binary"
done

echo -n 'Installation OK.  Pressez ENTRÉE.  '
read response

xit=0
