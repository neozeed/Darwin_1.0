#!/bin/sh

##
# Configure network interfaces and host name
##

. /etc/rc.common

##
# Configure interfaces
##

ConsoleMessage "Configuring network"

##
# Look for matching config information in /etc/iftab.
##
if [ -s /etc/iftab ]; then
    ipconfigd 
    if ! ipconfig waitall > /dev/null 2>&1; then
	sleep 1
	ipconfig waitall > /dev/null 2>&1
    fi
    ifconfig lo0 127.0.0.1 netmask 255.0.0.0 up
else
    ##
    # No /etc/iftab file!
    ##
    echo "Warning: /etc/iftab is missing"
    echo "No network interfaces were initialized"
    ifconfig lo0 inet 127.0.0.1 netmask 255.0.0.0 -trailers up
fi

##
# See if the network is up now
##
CheckForNetwork

##
# Configure global network settings
##

# Set HOSTNAME if needed
if [ "${HOSTNAME:=-AUTOMATIC-}" = "-AUTOMATIC-" ]; then
    HOSTNAME=$(ipconfig getoption "" host_name)
    if [ ! $? -eq 0 ]; then HOSTNAME="localhost"; fi
fi

if [ -z "${HOSTNAME}" ]; then HOSTNAME=localhost; fi

echo "Setting hostname: ${HOSTNAME}"
hostname "${HOSTNAME}"

if [ "${NETWORKUP:=-NO-}" = "-YES-" ]; then

    ##
    # Turn on IP routing.
    ##

    ConsoleMessage "Configuring network routing"

    # Set ROUTER if needed
    if [ "${ROUTER:=-AUTOMATIC-}" = "-AUTOMATIC-" ]; then
	ROUTER=$(ipconfig getoption "" router)
	if [ ! $? -eq 0 ]; then ROUTER=-NO-; fi
    fi

    case ${ROUTER:=-NO-} in

      -ROUTED-)
	# Set the 'q' (quiet) flag by default to avoid broadcasting routes.
	echo "     Using routed"
	routed -q
	;;

      -NO-)
	echo "    No network routing"
	;;

      *)
	##
	# If an explicit route is specified (the '*' clause), either
	# an IP address must be used or the router's hostname and IP
	# address must be specified in the /etc/hosts file.  
	##
	echo "    Using default router ${ROUTER}"
	route add default ${ROUTER} > /dev/null
	;;

    esac

    # Show progress
    #netstat -rn

    ##
    # Turn on/off IP forwarding
    ##

    if [ "${IPFORWARDING:=-NO-}" = "-YES-" ]; then
	sysctl -w net.inet.ip.forwarding=1 > /dev/null
    else
	sysctl -w net.inet.ip.forwarding=0 > /dev/null
    fi

    ##
    # Set the host id based on the first broadcast interface's IP address
    ##

    ConsoleMessage "Setting host identifier"

    # Convert the IP address from dotted decimal to a single unsigned 32-bit
    # decimal number.  For 17.202.40.191, this would be:
    #       17 * 16777216 + 202 * 65536 + 40 * 256 + 191
    #     = 298461375
    hostid=$(($(ifconfig -a | sed -n '/inet/p' | sed -n '/broadcast/p' | head -1 | \
	   sed 's|.*inet[ 	]*\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*|16777216 * \1 + 65536 * \2 + 256 * \3 + \4|')))

    if [ -z "${hostid}" ]; then
	echo "Warning: couldn't determine the host id"
    else
	sysctl -w kern.hostid=${hostid}
    fi

    ##
    # Load the shared IP kernel module
    ##
    # This is a workaround for the fact that kextd does not presently know
    # when to load BSD modules.
    if [ -d /System/Library/Extensions/SharedIP.kext ]; then
	ConsoleMessage "Loading Shared IP extension"
	kextload -v /System/Library/Extensions/SharedIP.kext
    fi

fi
